diff --git a/es/embed-webfonts.js b/es/embed-webfonts.js
index f6b0d96829c8a3301c142cacd07079e85b1f64fd..9590763a007e4d334a69673fb94eef0930fe35ea 100644
--- a/es/embed-webfonts.js
+++ b/es/embed-webfonts.js
@@ -175,7 +175,7 @@ export async function getWebFontCSS(node, options) {
     const rules = await parseWebFontRules(node, options);
     const usedFonts = getUsedFonts(node);
     const cssTexts = await Promise.all(rules
-        .filter((rule) => usedFonts.has(normalizeFontFamily(rule.style.fontFamily)))
+        .filter((rule) => usedFonts.has(normalizeFontFamily(rule.style.fontFamily || rule.style.getPropertyValue('fontFamily'))))
         .map((rule) => {
         const baseUrl = rule.parentStyleSheet
             ? rule.parentStyleSheet.href
diff --git a/lib/embed-webfonts.js b/lib/embed-webfonts.js
index c91538bd9c3afa63326a91267fb7b5b9c999cccd..bde5e1c7cb64687ec0dd583795d0185e50bfa450 100644
--- a/lib/embed-webfonts.js
+++ b/lib/embed-webfonts.js
@@ -262,7 +262,7 @@ function getWebFontCSS(node, options) {
                     usedFonts = getUsedFonts(node);
                     return [4 /*yield*/, Promise.all(rules
                             .filter(function (rule) {
-                            return usedFonts.has(normalizeFontFamily(rule.style.fontFamily));
+                            return usedFonts.has(normalizeFontFamily(rule.style.fontFamily || rule.style.getPropertyValue('fontFamily')));
                         })
                             .map(function (rule) {
                             var baseUrl = rule.parentStyleSheet
diff --git a/src/embed-webfonts.ts b/src/embed-webfonts.ts
index a84a699d37aeaaea19b9b31e0e98710f1e30da3c..bca861325b6ebc78e4e612ac7d5240ed91162204 100644
--- a/src/embed-webfonts.ts
+++ b/src/embed-webfonts.ts
@@ -234,7 +234,7 @@ export async function getWebFontCSS<T extends HTMLElement>(
   const cssTexts = await Promise.all(
     rules
       .filter((rule) =>
-        usedFonts.has(normalizeFontFamily(rule.style.fontFamily)),
+        usedFonts.has(normalizeFontFamily(rule.style.fontFamily || rule.style.getPropertyValue('fontFamily'))),
       )
       .map((rule) => {
         const baseUrl = rule.parentStyleSheet
